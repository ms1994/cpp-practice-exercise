#include <iostream>
#include <string>
#include<stdio.h>
#include<sstream>
using namespace std;

string highAndLow(const string& numbers);
string highAndLow2(const string& numbers); //intentando con sscanf

int main()
{
   cout << highAndLow2("8       3 -5 42      -1 0 0   -9 4 7        4 -4");
   cout << highAndLow2("-1449 -1625 -1718 -1918 -1535 -1645 -1273 -1726 -836 -2544 -1726 -1449 -1836 -1786 -1735 -2497 -1057 -2626 -935 -1817 -2050 -1437 -931 -2640 -807 -830 -2955 -2378 -815 -2382 -1708 -1191 -952 -2764 -984 -2419 -1572 -1342 -2543 -2283 -1102 -1186 -1944 -2395 -959 -2697 -774 -2038 -2376 -2023 -1969 -2174 -1879 -2309 -1524 -1741 -2596 -981 -802 -1750 -2438 -2835 -2749 -2309 -1436 -2120 -2085 -959 -1337 -1615 -1546 -2662 -946 -1040 -1784 -858 -2279 -1128 -1582 -1931 -1105 -1164 -2384 -2909 -2737 -881 -2616 -2723 -2549 -2694 -1453 -2598 -763 -1543 -845 -1650 -2741 -2951 -2035 -1138 -2429 -904 -974 -2296 -1995 -1545 -1637 -2758 -879 -2456 -2648 -2918 -2730 -801 -1883 -1990 -2870 -1181 -1443 -2480 -2965 -2548 -1292 -975 -1713 -2159 -1093 -2547 -2253 -2710 -944 -2560 -2548 -1546 -2251 -2072 -1785 -1747 -2008 -2207 -1244 -2506 -1665 -1136 -2494 -799 -1814 -1008 -1289 -1127 -2726 -2801 -1870 -772 -2225 -1035 -847 -2843 -913 -2002 -2544 -1496 -1110 -2191 -2340 -1094 -1247 -1079 -918 -2212 -1279 -1863 -1137 -1798 -2645 -2576 -2791 -1689 -1847 -2764 -1425 -2326 -1919 -848 -1456 -2066 -2722 -2254 -1497 -1104 -1629 -2312 -799 -1916 -2310 -2786 -2797 -937 -2526 -2670 -1686 -2934 -2590 -1267 -786 -2582 -2111 -2091 -911 -908 -2360 -785 -2953 -1890 -2774 -1584 -2078 -1855 -2104 -892 -2403 -1124 -811 -1938 -1642 -2021 -1239 -1310 -1635 -1331 -2732 -2564 -2080 -1101 -1588 -1561 -769 -1329 -2550 -1047 -1983 -1747 -1822 -2667 -1468 -2114 -2087 -1926 -2795 -2888 -2065 -1479 -2561 -1271 -2037 -2419 -2559 -1982 -1654 -1588 -1526 -2027 -1695 -2686 -1971 -2063 -780 -1330 -2368 -1354 -1570 -2049 -1433 -970 -2313 -2004 -2737 -2748 -2322 -1205 -1645 -1275 -1750 -830 -2196 -1169 -2415 -1207 -1336 -1060 -2163 -2550 -1109 -1681 -929 -2158 -1374 -2243 -787 -2091 -2129 -2170 -806 -784 -2223 -2922 -1926 -879 -1216 -2649 -2328 -973 -1795 -795 -2234 -2188 -1558 -1038 -1535 -2607 -2306 -2597 -2315 -2271 -1491 -2725 -2846 -2564 -1843 -1123 -2568 -926 -2699 -2448 -1122 -2408 -2491 -1178 -2736 -860 -1409 -2793 -1545 -2434 -948 -2943 -1076 -2896 -1700 -1419 -2308 -2599 -1717 -913 -1353 -848 -2159 -803 -1771 -1253 -1684 -778 -2325 -1645 -986 -1454 -957 -936 -2054 -2917 -1252 -2117 -1721 -881 -1883 -2919 -913 -2364 -1992 -2835 -1397 -1004 -1767 -2966 -2380 -1646 -2507 -1096 -2958 -2580 -2766 -1022 -1635 -2733 -2800 -921 -2483 -2548 -1337 -1834 -879 -2877 -1036 -2397 -1076 -1044 -1356 -1944 -2781 -2645 -1026 -2007 -2180 -1608 -2272 -1127 -2091 -926 -1324 -2045 -2542 -2134 -1903 -846 -2430 -2437 -951 -2057 -2120 -1508 -2593 -1629 -2939 -2794 -2504 -2633 -1389 -2693 -782 -1488 -2072 -881 -2251 -2338 -820 -2142 -1367 -1366 -1385 -2851 -1472 -2672 -1603 -1231 -2747 -1128 -2237 -808 -1483 -1596 -955 -1799 -1026");
   cout << highAndLow("-1449 -1625 -1718 -1918 -1535 -1645 -1273 -1726 -836 -2544 -1726 -1449 -1836 -1786 -1735 -2497 -1057 -2626 -935 -1817 -2050 -1437 -931 -2640 -807 -830 -2955 -2378 -815 -2382 -1708 -1191 -952 -2764 -984 -2419 -1572 -1342 -2543 -2283 -1102 -1186 -1944 -2395 -959 -2697 -774 -2038 -2376 -2023 -1969 -2174 -1879 -2309 -1524 -1741 -2596 -981 -802 -1750 -2438 -2835 -2749 -2309 -1436 -2120 -2085 -959 -1337 -1615 -1546 -2662 -946 -1040 -1784 -858 -2279 -1128 -1582 -1931 -1105 -1164 -2384 -2909 -2737 -881 -2616 -2723 -2549 -2694 -1453 -2598 -763 -1543 -845 -1650 -2741 -2951 -2035 -1138 -2429 -904 -974 -2296 -1995 -1545 -1637 -2758 -879 -2456 -2648 -2918 -2730 -801 -1883 -1990 -2870 -1181 -1443 -2480 -2965 -2548 -1292 -975 -1713 -2159 -1093 -2547 -2253 -2710 -944 -2560 -2548 -1546 -2251 -2072 -1785 -1747 -2008 -2207 -1244 -2506 -1665 -1136 -2494 -799 -1814 -1008 -1289 -1127 -2726 -2801 -1870 -772 -2225 -1035 -847 -2843 -913 -2002 -2544 -1496 -1110 -2191 -2340 -1094 -1247 -1079 -918 -2212 -1279 -1863 -1137 -1798 -2645 -2576 -2791 -1689 -1847 -2764 -1425 -2326 -1919 -848 -1456 -2066 -2722 -2254 -1497 -1104 -1629 -2312 -799 -1916 -2310 -2786 -2797 -937 -2526 -2670 -1686 -2934 -2590 -1267 -786 -2582 -2111 -2091 -911 -908 -2360 -785 -2953 -1890 -2774 -1584 -2078 -1855 -2104 -892 -2403 -1124 -811 -1938 -1642 -2021 -1239 -1310 -1635 -1331 -2732 -2564 -2080 -1101 -1588 -1561 -769 -1329 -2550 -1047 -1983 -1747 -1822 -2667 -1468 -2114 -2087 -1926 -2795 -2888 -2065 -1479 -2561 -1271 -2037 -2419 -2559 -1982 -1654 -1588 -1526 -2027 -1695 -2686 -1971 -2063 -780 -1330 -2368 -1354 -1570 -2049 -1433 -970 -2313 -2004 -2737 -2748 -2322 -1205 -1645 -1275 -1750 -830 -2196 -1169 -2415 -1207 -1336 -1060 -2163 -2550 -1109 -1681 -929 -2158 -1374 -2243 -787 -2091 -2129 -2170 -806 -784 -2223 -2922 -1926 -879 -1216 -2649 -2328 -973 -1795 -795 -2234 -2188 -1558 -1038 -1535 -2607 -2306 -2597 -2315 -2271 -1491 -2725 -2846 -2564 -1843 -1123 -2568 -926 -2699 -2448 -1122 -2408 -2491 -1178 -2736 -860 -1409 -2793 -1545 -2434 -948 -2943 -1076 -2896 -1700 -1419 -2308 -2599 -1717 -913 -1353 -848 -2159 -803 -1771 -1253 -1684 -778 -2325 -1645 -986 -1454 -957 -936 -2054 -2917 -1252 -2117 -1721 -881 -1883 -2919 -913 -2364 -1992 -2835 -1397 -1004 -1767 -2966 -2380 -1646 -2507 -1096 -2958 -2580 -2766 -1022 -1635 -2733 -2800 -921 -2483 -2548 -1337 -1834 -879 -2877 -1036 -2397 -1076 -1044 -1356 -1944 -2781 -2645 -1026 -2007 -2180 -1608 -2272 -1127 -2091 -926 -1324 -2045 -2542 -2134 -1903 -846 -2430 -2437 -951 -2057 -2120 -1508 -2593 -1629 -2939 -2794 -2504 -2633 -1389 -2693 -782 -1488 -2072 -881 -2251 -2338 -820 -2142 -1367 -1366 -1385 -2851 -1472 -2672 -1603 -1231 -2747 -1128 -2237 -808 -1483 -1596 -955 -1799 -1026");

}


string highAndLow(const string& numbers){
stringstream ss(numbers);
stringstream ss1, ss2;
int n = 0;
string minS, maxS;
ss >> n;
int min = n, max = n;
while (ss >> n) {
    min = min < n? min:n;
    max = n < max? max:n;
}
ss1 << max;
ss2 << min;
ss1 >> maxS;
ss2 >> minS;
string h = maxS + " " + to_string(minS); //existe el to_string() falta arreglar el compiler
return h;

}




string highAndLow2(const string& numbers){
const char *str = numbers.c_str(); //transformar a char *
int n;
string h= "";
sscanf(str, "%d", &n);
int min, max = n; //no lo inicializa a un valor random
for(unsigned int i = 0; i < numbers.length(); i++){
    if (numbers[i] == ' ' || numbers[i] == '\n' || numbers[i] == '\t') {
    str = numbers.substr(i).c_str();
    sscanf(str, "%d", &n);
    min = min < n? min:n;
    max = n < max? max:n;
}
}
h = printf("%d %d\n", max, min);
return h;
}

